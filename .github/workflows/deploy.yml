name: Build and Deploy
on:
    workflow_dispatch:
        inputs:
            subscription_id:
                description: 'Subscription ID'
                required: true
            tenant_id:
                description: 'Tenant ID'
                required: true
            client_id:
                description: 'Client ID'
                required: true
            client_secret:
                description: 'Client Secret'
                required: true
            
env:
    AZURE_CLIENT_ID: "${{ inputs.client_id }}"
    AZURE_CLIENT_SECRET: "${{ inputs.client_secret }}"
    AZURE_TENANT_ID: "${{ inputs.tenant_id }}"
    AZURE_SUBSCRIPTION_ID: "${{ inputs.subscription_id }}"
jobs:
    deploy:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure CLI Login
        run: |
          az login --service-principal -u ${{ env.AZURE_CLIENT_ID}} -p ${{ env.AZURE_CLIENT_SECRET}} --tenant ${{ env.AZURE_TENANT_ID }}

      - name: Set Azure Subscription
        run: az account set --subscription ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Run npm install
        run: npm install express

      - name: Create Azure Container Registry
        run: |
            az group create --name acrRG --location eastus
            az group wait --name acrRG --created
            az acr create --resource-group acrRG --name myacr --sku Basic

      - name: Docker Build the App
        run: docker build -t hello-world-app:latest .
        
      - name: Login to Azure Container Registry
        run: |
          az acr login --name myacr

      - name: Tag Docker Image
        run: docker tag hello-world-app:latest myacr.azurecr.io/hello-world-app:latest

      - name: Push Docker Image to ACR
        run: docker push myacr.azurecr.io/hello-world-app:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve -var subscription_id=${{ env.AZURE_SUBSCRIPTION_ID }} -var tenant_id=${{ env.AZURE_TENANT_ID }} -var client_id=${{ env.AZURE_CLIENT_ID }} -var client_secret=${{ env.AZURE_CLIENT_SECRET }}

    
      - name: Get Service URL
        run: |
          kubectl get svc hello-world-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
        working-directory: ./terraform

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: hello-world-app:latest

      - name: Rollback Deployment
        run: kubectl rollout undo deployment/hello-world-app